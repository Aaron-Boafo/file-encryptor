cmake_minimum_required(VERSION 3.15)

# Enable support for vcpkg manifest mode by configuring the toolchain early
if(NOT DEFINED CMAKE_TOOLCHAIN_FILE AND DEFINED ENV{VCPKG_ROOT})
    set(CMAKE_TOOLCHAIN_FILE "$ENV{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
        CACHE STRING "")
endif()

project(App LANGUAGES CXX)

# Optional: set C++ standard
set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Locate and use dependencies declared in vcpkg.json
# For example, find fmt library installed via vcpkg manifest mode
find_package(fmt CONFIG REQUIRED)
find_package(nlohmann_json CONFIG REQUIRED)

# Define your executable target and source files
add_executable(${PROJECT_NAME} main.cpp src/utils.cpp)
target_include_directories(${PROJECT_NAME} PRIVATE include)

# Link your target against vcpkg-installed libraries
target_link_libraries(${PROJECT_NAME} PRIVATE 
    fmt::fmt
    nlohmann_json::nlohmann_json
)
